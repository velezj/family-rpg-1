import sys
import logging

import json
import jinja2


## ==========================================================================

def _log():
    return logging.getLogger( __name__ )

## ==========================================================================

__JINJA2_DEFAULT_ENV__ = None
def jinja2_env():
    global __JINJA2_DEFAULT_ENV__
    if __JINJA2_DEFAULT_ENV__ is not None:
        return __JINJA2_DEFAULT_ENV__
    __JINJA2_DEFAULT_ENV__ = jinja2.Environment(
        loader=jinja2.FileSystemLoader( ["."] ) )
    return __JINJA2_DEFAULT_ENV__

## ==========================================================================

def render_character_to_stream( out, character, template ):
    template.stream( {'character':character} ).dump( out )

## ==========================================================================

def generate_character_sheet( character, layout_name, output_filename ):
    template = jinja2_env().get_template( layout_name )
    with open( output_filename, 'w' ) as fout:
        render_character_to_stream( fout, character, template )

## ==========================================================================

def command_line_execute():
    if len(sys.argv) < 4:
        print( "usage: command character-file layout/template-name output-file")
        exit(-1)
    character_filename = sys.argv[1]
    layout_name = sys.argv[2]
    output_filename = sys.argv[3]
    print( "Loading '{}' applying '{}' into '{}'".format(
        character_filename,
        layout_name,
        output_filename ) )
    with open( character_filename, 'r' ) as charf:
        character = json.load( charf )
        print( "Layout for character '{}'".format( character.get("name") ) )
        generate_character_sheet( character, layout_name, output_filename )

## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================
## ==========================================================================

if __name__ == "__main__":
    command_line_execute()
